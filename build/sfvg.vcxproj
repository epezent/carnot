<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{A92CDE99-CC98-359D-A615-9BE3C982C56E}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>sfvg</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Git\SFVG\build\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">sfvg.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">sfvg</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Git\SFVG\build\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">sfvg.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">sfvg</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Git\SFVG\build\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">sfvg.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">sfvg</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.lib</TargetExt>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Git\SFVG\build\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">sfvg.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">sfvg</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.lib</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Git\SFVG\include;C:\Program Files\chipmunk\include\chipmunk\..;C:\Git\SFVG\src;C:\Program Files\SFML\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /await</AdditionalOptions>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_CRT_SECURE_NO_WARNINGS;NOMINMAX;_WINSOCK_DEPRECATED_NO_WARNINGS;SFML_STATIC;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;_CRT_SECURE_NO_WARNINGS;NOMINMAX;_WINSOCK_DEPRECATED_NO_WARNINGS;SFML_STATIC;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Git\SFVG\include;C:\Program Files\chipmunk\include\chipmunk\..;C:\Git\SFVG\src;C:\Program Files\SFML\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Git\SFVG\include;C:\Program Files\chipmunk\include\chipmunk\..;C:\Git\SFVG\src;C:\Program Files\SFML\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Git\SFVG\include;C:\Program Files\chipmunk\include\chipmunk\..;C:\Git\SFVG\src;C:\Program Files\SFML\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /await</AdditionalOptions>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;NOMINMAX;_WINSOCK_DEPRECATED_NO_WARNINGS;SFML_STATIC;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;NOMINMAX;_WINSOCK_DEPRECATED_NO_WARNINGS;SFML_STATIC;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Git\SFVG\include;C:\Program Files\chipmunk\include\chipmunk\..;C:\Git\SFVG\src;C:\Program Files\SFML\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Git\SFVG\include;C:\Program Files\chipmunk\include\chipmunk\..;C:\Git\SFVG\src;C:\Program Files\SFML\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Git\SFVG\include;C:\Program Files\chipmunk\include\chipmunk\..;C:\Git\SFVG\src;C:\Program Files\SFML\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /await</AdditionalOptions>
      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;NOMINMAX;_WINSOCK_DEPRECATED_NO_WARNINGS;SFML_STATIC;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;NOMINMAX;_WINSOCK_DEPRECATED_NO_WARNINGS;SFML_STATIC;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Git\SFVG\include;C:\Program Files\chipmunk\include\chipmunk\..;C:\Git\SFVG\src;C:\Program Files\SFML\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Git\SFVG\include;C:\Program Files\chipmunk\include\chipmunk\..;C:\Git\SFVG\src;C:\Program Files\SFML\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>C:\Git\SFVG\include;C:\Program Files\chipmunk\include\chipmunk\..;C:\Git\SFVG\src;C:\Program Files\SFML\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /await</AdditionalOptions>
      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;NOMINMAX;_WINSOCK_DEPRECATED_NO_WARNINGS;SFML_STATIC;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;_CRT_SECURE_NO_WARNINGS;NOMINMAX;_WINSOCK_DEPRECATED_NO_WARNINGS;SFML_STATIC;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\Git\SFVG\include;C:\Program Files\chipmunk\include\chipmunk\..;C:\Git\SFVG\src;C:\Program Files\SFML\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>C:\Git\SFVG\include;C:\Program Files\chipmunk\include\chipmunk\..;C:\Git\SFVG\src;C:\Program Files\SFML\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Lib>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Git\SFVG\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/Git/SFVG/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Git/SFVG -BC:/Git/SFVG/build --check-stamp-file C:/Git/SFVG/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:/Git/SFVG/CMakeLists.txt;C:\Git\SFVG\CMakeLists.txt;C:\Git\SFVG\build\CMakeFiles\3.13.2\CMakeCXXCompiler.cmake;C:\Git\SFVG\build\CMakeFiles\3.13.2\CMakeRCCompiler.cmake;C:\Git\SFVG\build\CMakeFiles\3.13.2\CMakeSystem.cmake;C:\Git\SFVG\cmake\FindChipmunk.cmake;C:\Git\SFVG\cmake\SFVGConfig.cmake.in;C:\Program Files\CMake\share\cmake-3.13\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\WindowsPaths.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\WriteBasicConfigVersionFile.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLConfig.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLConfigDependencies.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLConfigVersion.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLStaticTargets-debug.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLStaticTargets-release.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLStaticTargets.cmake;C:\Git\SFVG\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Git\SFVG\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/Git/SFVG/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Git/SFVG -BC:/Git/SFVG/build --check-stamp-file C:/Git/SFVG/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:/Git/SFVG/CMakeLists.txt;C:\Git\SFVG\CMakeLists.txt;C:\Git\SFVG\build\CMakeFiles\3.13.2\CMakeCXXCompiler.cmake;C:\Git\SFVG\build\CMakeFiles\3.13.2\CMakeRCCompiler.cmake;C:\Git\SFVG\build\CMakeFiles\3.13.2\CMakeSystem.cmake;C:\Git\SFVG\cmake\FindChipmunk.cmake;C:\Git\SFVG\cmake\SFVGConfig.cmake.in;C:\Program Files\CMake\share\cmake-3.13\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\WindowsPaths.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\WriteBasicConfigVersionFile.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLConfig.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLConfigDependencies.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLConfigVersion.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLStaticTargets-debug.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLStaticTargets-release.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLStaticTargets.cmake;C:\Git\SFVG\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Git\SFVG\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/Git/SFVG/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Git/SFVG -BC:/Git/SFVG/build --check-stamp-file C:/Git/SFVG/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:/Git/SFVG/CMakeLists.txt;C:\Git\SFVG\CMakeLists.txt;C:\Git\SFVG\build\CMakeFiles\3.13.2\CMakeCXXCompiler.cmake;C:\Git\SFVG\build\CMakeFiles\3.13.2\CMakeRCCompiler.cmake;C:\Git\SFVG\build\CMakeFiles\3.13.2\CMakeSystem.cmake;C:\Git\SFVG\cmake\FindChipmunk.cmake;C:\Git\SFVG\cmake\SFVGConfig.cmake.in;C:\Program Files\CMake\share\cmake-3.13\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\WindowsPaths.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\WriteBasicConfigVersionFile.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLConfig.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLConfigDependencies.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLConfigVersion.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLStaticTargets-debug.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLStaticTargets-release.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLStaticTargets.cmake;C:\Git\SFVG\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Git\SFVG\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/Git/SFVG/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Git/SFVG -BC:/Git/SFVG/build --check-stamp-file C:/Git/SFVG/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:/Git/SFVG/CMakeLists.txt;C:\Git\SFVG\CMakeLists.txt;C:\Git\SFVG\build\CMakeFiles\3.13.2\CMakeCXXCompiler.cmake;C:\Git\SFVG\build\CMakeFiles\3.13.2\CMakeRCCompiler.cmake;C:\Git\SFVG\build\CMakeFiles\3.13.2\CMakeSystem.cmake;C:\Git\SFVG\cmake\FindChipmunk.cmake;C:\Git\SFVG\cmake\SFVGConfig.cmake.in;C:\Program Files\CMake\share\cmake-3.13\Modules\BasicConfigVersion-AnyNewerVersion.cmake.in;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCXXInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeGenericSystem.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeInitializeConfigs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeLanguageInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakePackageConfigHelpers.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeRCInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\FindPackageMessage.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\GNUInstallDirs.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows-MSVC.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\Windows.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\Platform\WindowsPaths.cmake;C:\Program Files\CMake\share\cmake-3.13\Modules\WriteBasicConfigVersionFile.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLConfig.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLConfigDependencies.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLConfigVersion.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLStaticTargets-debug.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLStaticTargets-release.cmake;C:\Program Files\SFML\lib\cmake\SFML\SFMLStaticTargets.cmake;C:\Git\SFVG\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Git\SFVG\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="C:\Git\SFVG\src\clipper\clipper.hpp" />
    <ClCompile Include="C:\Git\SFVG\src\clipper\clipper.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Common\Print.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Common\Random.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Component.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Coroutine.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Engine.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\GameObject.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Id.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Object.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\ProcessInfo.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\XboxController.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Components\LineRenderer.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Components\Renderer.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Components\RigidBody.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Components\ShapeRenderer.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Components\SpriteRenderer.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Components\StrokeRenderer.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Components\TextRenderer.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Components\Transform.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Fonts\FontAwesome5.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Fonts\RobotoRegular.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Fonts\RobotoBold.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Fonts\RobotoItalic.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Fonts\RobotoMonoRegular.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Fonts\RobotoMonoBold.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Fonts\RobotoMonoItalic.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Systems\DebugSystem.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Systems\InputSystem.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\Systems\PhysicsSystem.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\ImGui\imgui-SFML.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\ImGui\imgui.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\ImGui\imgui_draw.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Engine\ImGui\imgui_widgets.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Geometry\Anchor.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Geometry\CircleShape.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Geometry\CrossShape.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Geometry\Path.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Geometry\Points.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Geometry\PolygonShape.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Geometry\RectangleShape.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Geometry\Shape.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Geometry\SquareShape.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Geometry\StarShape.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Graphics\Color.cpp" />
    <ClCompile Include="C:\Git\SFVG\src\SFVG\Graphics\Gradient.cpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Common\Alignment.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Common\Assert.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Common\Detail\Math.inl" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Common\Detail\Tween.inl" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Common\Imports.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Common\Math.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Common\Options.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Common\Print.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Common\Random.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Common\Range.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Common\Sequence.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Common\Tween.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\Component.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\Components\LineRenderer.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\Components\Renderer.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\Components\RigidBody.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\Components\ShapeRenderer.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\Components\SpriteRenderer.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\Components\StrokeRenderer.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\Components\TextRenderer.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\Components\Transform.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\Coroutine.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\Engine.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\FontAwesome5.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\GameObject.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\Handle.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\Id.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\Object.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\ProcessInfo.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\ResourceManager.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\ResourceManager.inl" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\Systems\DebugSystem.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\Systems\InputSystem.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\Systems\PhysicsSystem.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\Systems\RenderSystem.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Engine\XboxController.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Geometry\Anchor.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Geometry\CircleShape.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Geometry\CrossShape.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Geometry\Path.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Geometry\Points.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Geometry\PolygonShape.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Geometry\RectangleShape.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Geometry\Shape.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Geometry\SquareShape.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Geometry\StarShape.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Graphics\Color.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\Graphics\Gradient.hpp" />
    <ClInclude Include="C:\Git\SFVG\include\SFVG\SFVG.hpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\Git\SFVG\build\ZERO_CHECK.vcxproj">
      <Project>{E53C9AE1-16E4-35C4-A4C5-D02B35D7E525}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>